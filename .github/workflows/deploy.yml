name: Deploy to AKS

on:
  push:
    branches:
      - AKS-Cluster

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️ Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 3️ Decode kubeconfig from secret and set KUBECONFIG
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.AKS_KUBECONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml

      # 4️ Apply namespaces
      - name: Apply namespaces
        run: |
          kubectl apply --kubeconfig=kubeconfig.yaml -f namespace.yaml
          kubectl apply --kubeconfig=kubeconfig.yaml -f ingress-nginx-namespace.yaml

      # 5️ Install cert-manager CRDs
      - name: Install cert-manager CRDs
        run: |
          kubectl apply --kubeconfig=kubeconfig.yaml -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.crds.yaml

      # 6️ Apply ClusterIssuer for TLS
      - name: Apply ClusterIssuer
        run: |
          kubectl apply --kubeconfig=kubeconfig.yaml -f ClusterIssuer.yaml

      # 7️ Apply Deployment and Service
      - name: Deploy application
        run: |
          kubectl apply --kubeconfig=kubeconfig.yaml -f deployment.yaml
          kubectl apply --kubeconfig=kubeconfig.yaml -f service.yaml

      # 8️ Deploy ingress-nginx controller
      - name: Apply ingress-nginx controller
        run: |
          kubectl apply --kubeconfig=kubeconfig.yaml -f ingress-nginx-controller.yaml --wait

      # 9️ Apply Ingress with TLS annotations
      - name: Apply Ingress
        run: |
          kubectl apply --kubeconfig=kubeconfig.yaml -f ingress.yaml --wait

      #  Wait for TLS certificate
      - name: Wait for TLS certificate
        run: |
          echo "Waiting for TLS certificate to be ready..."
          kubectl wait --kubeconfig=kubeconfig.yaml --for=condition=Ready certificate/wisecow-tls -n wisecow --timeout=300s || true
